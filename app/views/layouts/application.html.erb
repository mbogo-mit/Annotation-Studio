<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title><%= ENV["PAGE_TITLE"] %> :: <%= yield(:page_title) %></title>
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="https://html5shim.googlecode.com/svn/trunk/html5.js" type="text/javascript"></script>
    <![endif]-->
    <%= csrf_meta_tags %>
    <%= stylesheet_link_tag "application", :media => "all" %>
    <meta name="robots" content="noindex">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="google-site-verification" content="<%= ENV["GOOGLE_VERIFICATION_CODE"] %>" />
    <link rel="shortcut icon" type="image/png" href="/<%= ENV["FAVICON"] %>" sizes="32x32" />
    <%= javascript_include_tag "application" %>
    <% if ENV["USE_TYPEKIT"] == true %>
      <script type="text/javascript" src="//use.typekit.net/<%= ENV["TYPEKIT_CODE"] %>"></script>
      <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
    <% end %>
	<script type="text/javascript">
		var icons = {
			external_link: '<%= asset_path('external-link.png') %>',
			file_image: '<%= asset_path('file-image.png')%>'
		}
	</script>
</head>
<body id="<%= yield(:body_id) %>" class="<%= yield(:body_class) %>">

    <nav class="navbar navbar-inverse navbar-fixed-top" id="navbar">
      <div class="container">
        <%= render_brand %>
      </div>
    </nav>

    <% if !current_user.nil?  %>
    <nav class="navmenu navmenu-inverse navmenu-fixed-left offcanvas" id="mainmenu" role="navigation">
      <% unless params[:controller].include?('registrations') || params[:controller].include?('confirmations') || params[:controller].include?('terms')  || params[:controller].include?('high_voltage') %>
        <%= render "#{params[:controller]}/leftnav" %>
      <% end %>
    </nav>

    <nav class="navmenu navmenu-inverse navmenu-fixed-right offcanvas" id="toolsmenu" role="navigation">
      <% unless params[:controller].include?('registrations') || params[:controller].include?('confirmations') || params[:controller].include?('terms')  || params[:controller].include?('high_voltage') %>
        <%= render "#{params[:controller]}/rightnav" %>
      <% end %>
    </nav>

    <nav class="navbar navbar-default navbar-fixed-top hidden-xs" id="lower-navbar">
      <div class="container">
        <div class="row">
          <div class="col-md-8">
            <button type="button" class="navbar-toggle" data-toggle="offcanvas" data-recalc="false" data-target="#mainmenu" id="leftburger" title="Navigation"><i class="fa fa-bars"></i></button>
            <%= render "shared/breadcrumbs" %>
          </div>
          <div class="col-md-4">
            <%= render "shared/annotation_header" %>
            <button type="button" class="navbar-toggle pull-right" data-toggle="offcanvas" data-recalc="false" data-target="#toolsmenu" id="rightburger" title="Tools"><i class="fa fa-gears"></i></button>
          </div>
        </div>
      </div>
    </nav>
    <% end %>

	<% if params[:controller] == 'devise/sessions' %>
	<div class="home-image">
		<%= image_tag(home_banner, { alt: 'Cover Photo' }) %>
	</div>
<% end %>
    <div class="container">
      <%= render partial: "shared/noscript" %>
      <%= render partial: "shared/flash_messages", flash: flash %>
      <%= yield %>
    </div><!-- /.container -->

    <%= render_footer %>

    <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', '<%= ENV["GOOGLE_ANALYTICS_CODE"] %>']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script>
    <script type="text/javascript">
      var _documentTitle = "";
    $('document').ready(function() {

      /*
      This piece of code is applied to _breadcrumbs.html.erb to
      the li tags document-title-overflow-#. Checks if text has
      overflown if so then cut the document title down and add ...
      also adds an on hover functionality which makes it if the
      user hovers over the title they can scroll through the whole
      length of the title
      */
      function CutDownTextToDesiredLength(text,container_width){
        /*
        Function: This function takes in text and cuts the text down until
        the text fits inside the container and has a ... to represent
        that there is more text that can be displayed if the user
        hovers over the document title.
        Returns: the new text with a  at the end
        */

        /*
        Record that the text is to long and put an on hover event
        so when the user hovers over the text they can scroll and
        see the whole document title
        */
        _documentTitle = text;
        dto1.hover(function(){
          $(this).text(_documentTitle);
        });
        dto1.mouseout(function(){
          $(this).text(CutDownTextToDesiredLength($(this).text(),$(this).innerWidth()));
        });

        //Adjust the text so it is cut down and has "..." at the end
        var conversionFactor = 120/714;//converting pixel width to number of characters that can fit in that width
        var numberOfAllowedCharacters = Math.floor(conversionFactor * container_width) - 3;//the minus 3 is because we are going to add '...' to the end of the string
        var textArray = text.substring(0, numberOfAllowedCharacters).split(' ');
        if(textArray.length > 1){
          textArray.pop();
        }
        textArray.push("...");
        return(textArray.join(" "));
      }

      var dto1 = $('#document-title-overflow-1');
      /*if(dto1 != undefined){
        if (dto1[0].scrollWidth >  dto1.innerWidth()) {
          //Text has over-flown
          dto1.text(CutDownTextToDesiredLength(dto1.text(),dto1.innerWidth()));
        }
      }*/


      //This block of code is for the custom scroll bar created
      var _scrollbarTrackMarginTop = 0;
      var _mousedown = false;
      var _previousPageYValue = 0;//for scrollbar
      function ScrollBarSize(trueViewHeight){
        //figures out the appropriate height and width of scroll bar and scale factors for scrolling
        var container = null;
        var scrollingFactor = 0
        $(".container").each(function(index){
          if(index == 2){
            container = $(this);
          }
        });
        //ratio * Scrollbar Track Height = Height of Scrollbar
        var heightOfScrollbar = (trueViewHeight / container.height()) * $("#my-scrollbar-div-container").height();
        console.log(container.height());
        $("#my-scrollbar").height(heightOfScrollbar);//setting the height
        //setting the width = width of the track
        $("#my-scrollbar").width($("#my-scrollbar-div-container").width());
        SetScrollingFunctionality();
      }

      function ScrollbarTrackSize(){
        //figures out the appropriate size for the scrollbar track
        var marginFactor = 0.02
        var trueViewHeight = $(window).height() - $("#navbar").height() - $("#lower-navbar").height();
        var scrollbarTrackMarginTop = trueViewHeight * marginFactor;
        _scrollbarTrackMarginTop = scrollbarTrackMarginTop;
        var sdt = $("#my-scrollbar-div-container");//scrollbar div track
        //setting the top position
        sdt.css("top", scrollbarTrackMarginTop + "px");
        //setting the left position
        sdt.css("left", ($(window).width() - sdt.width() - sdt.parent().position().left) - 5 + "px");
        //setting the length of the scroll bar div track
        sdt.height(trueViewHeight * (0.9 - (2 * marginFactor)));
        $("#fixed-scrollbar-container").css("left", ($(window).width() - sdt.width() - sdt.parent().position().left) + "px");
        $("#fixed-scrollbar-container").height(trueViewHeight * 0.9);
        ScrollBarSize(trueViewHeight);
      }

      function SetScrollingFunctionality(){
        //sets how the scrolling events and scrolling ratios will work for this scrollbar
        /*$("#my-scrollbar-div-container").mouseenter(function() {
          console.log("hi");
          $(this).animate({
            opacity: 1.0
          }, 500);
          $("#my-scrollbar").animate({
            opacity: 1.0
          }, 250);
        });

        $("#my-scrollbar-div-container").mouseout(function() {
          console.log("bye");
          $(this).animate({
            opacity: 0.0
          }, 250);
          $("#my-scrollbar").animate({
            opacity: 0.0
          }, 250);
        });
        */

        $("#my-scrollbar").mousedown(function() {
            _mousedown = true;
        });
        $(document).mouseup(function(){
            _mousedown = false;
            _previousPageYValue = 0;
        });

        $(document).mousemove(function(event){
            if(_mousedown){
              if(window.event.stopPropagation){ window.event.stopPropagation();}
              if(window.event.preventDefault){ window.event.preventDefault();}
              window.event.cancelBubble=true;
              window.event.returnValue=false;
              if(_previousPageYValue == 0){
                _previousPageYValue = event.clientY;
              }
              else{
                //make sure the user can't over scroll
                if($("#my-scrollbar").position().top <= ($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height())
                  && $("#my-scrollbar").position().top >= 0){
                  $("#my-scrollbar").css("top", $("#my-scrollbar").position().top + (event.clientY - _previousPageYValue) + "px");
                }
                else{
                  if($("#my-scrollbar").position().top < 0){
                    $("#my-scrollbar").css("top", "0px");
                  }
                  else{
                    $("#my-scrollbar").css("top", ($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height()));
                  }
                }
                _previousPageYValue = event.clientY;
              }
              $("body").scrollTop(($("#my-scrollbar").position().top / ($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height())) * ($("body").innerHeight() - $(window).innerHeight()));

              console.log(($("#my-scrollbar").position().top / ($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height())) * ($("body").innerHeight() - $(window).innerHeight()));
            }
        });

        //checking if the page is being scrolled and adjusting scroll bar so it doesnt move
        $(document).scroll(function(){
          //$("#my-scrollbar-div-container").css("top", (_scrollbarTrackMarginTop + $(this).scrollTop()) + "px");
          var percentage = ($("body").scrollTop()) / ($("body").innerHeight() - $(window).innerHeight());
          console.log((($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height()) * percentage) + "px");
          $("#my-scrollbar").css("top", (($("#my-scrollbar-div-container").height() - $("#my-scrollbar").height()) * percentage) + "px");

          console.log("hi");
          $("#my-scrollbar-div-container").animate({
            opacity: 1.0
          }, 250);
          $("#my-scrollbar").animate({
            opacity: 1.0
          }, 250);

        });

        //showing scrollbar once all functionalities are up and running
        $("#my-scrollbar-div-container").animate({
          opacity: 1.0
        }, 250);
        $("#my-scrollbar").animate({
          opacity: 1.0
        }, 250);

      }


      setTimeout(ScrollbarTrackSize, 1000);


    });

    $(document).load(function(){
      console.log("heyhey");
    });
    </script>
</body>
</html>
